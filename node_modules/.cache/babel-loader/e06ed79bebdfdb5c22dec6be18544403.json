{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\inspiring-lab-project\\\\src\\\\modules\\\\login\\\\component\\\\form.js\";\n// import React, { Component } from 'react';\n// import { Field, reduxForm } from 'redux-form'\n// import logo1 from './../../../assets/images/logo.png';\n// import { Form, Input, Button, Checkbox } from 'antd';\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\n// class LoginForm extends Component {\n//     render() {\n//         const { handleSubmit, initialValue } = this.props\n//     return (\n//         <div>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"firstName\">Username</label>\n//           <Field \n//           name=\"firstName\" \n//           component=\"input\" \n//           type=\"text\" \n//           rules={[\n//             {\n//               required: true,\n//               message: 'Please input your Username!',\n//             },\n//           ]}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password</label>\n//           <Field name=\"password\" component=\"input\" type=\"text\" />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       {/* <Form\n//       formId=\"login-form\"\n//       name=\"login-form\"\n//       className=\"login-form1\"\n//       initialValues={{\n//         remember: true,\n//         firstName: ''\n//       }}\n//       onFinish={handleSubmit}\n//     >\n//       <Form.Item\n//         name=\"firstName\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your Username!',\n//           },\n//         ]}\n//       >\n//         <Input prefix={<UserOutlined className=\"site-form-item-icon\" value={initialValue && initialValue.firstName? initialValue.firstName : \"\"}/>} placeholder=\"Username\" />\n//       </Form.Item>\n//       <Form.Item\n//         name=\"password\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your Password!',\n//           },\n//         ]}\n//       >\n//         <Input\n//           prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//           type=\"password\"\n//           placeholder=\"Password\"\n//         />\n//       </Form.Item>\n//       <Form.Item>\n//         <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n//           <Checkbox>Remember me</Checkbox>\n//         </Form.Item>\n//         <a className=\"login-form-forgot\" href=\"\">\n//           Forgot password\n//         </a>\n//       </Form.Item>\n//       <Form.Item>\n//         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//           Log in\n//         </Button>\n//         Or <a href=\"\">register now!</a>\n//       </Form.Item>\n//     </Form> */}\n//     </div>\n//     )\n// }\n// }\n// LoginForm = reduxForm({\n//     // a unique name for the form\n//     form: 'login-form'\n//   })(LoginForm)\n// export default LoginForm;\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import 'antd/dist/antd.css';\n// import './index.css';\n// import { Form, Input, Button, Checkbox } from 'antd';\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\n// class loginForm extends Component {\n//   constructor(props) {\n//       super(props);\n//   }\n//   render(){\n//   const onFinish = values => {\n//     console.log('Received values of form: ', values);\n//   };\n//   return (\n//     <Form\n//       name=\"normal_login\"\n//       className=\"login-form\"\n//       initialValues={{\n//         remember: true,\n//       }}\n//       onFinish={onFinish}\n//     >\n//       <Form.Item\n//         name=\"username\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your Username!',\n//           },\n//         ]}\n//       >\n//         <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n//       </Form.Item>\n//       <Form.Item\n//         name=\"password\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your Password!',\n//           },\n//         ]}\n//       >\n//         <Input\n//           prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//           type=\"password\"\n//           placeholder=\"Password\"\n//         />\n//       </Form.Item>\n//       <Form.Item>\n//         <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n//           <Checkbox className=\"white-text\">Remember me</Checkbox>\n//         </Form.Item>\n//         <a className=\"login-form-forgot\" href=\"\">\n//           Forgot password\n//         </a>\n//       </Form.Item>\n//       <Form.Item>\n//         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//           Log in\n//         </Button>\n//         Or <a href=\"\">register now!</a>\n//       </Form.Item>\n//     </Form>\n//   );\n//       }\n// };\n// export default loginForm\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from 'redux-form';\nimport { Button } from \"antd\";\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta,\n      type\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, label), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        style: {\n          width: ''\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      })), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ui-error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InfoCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 48\n        }\n      }), \" \", error));\n    }\n  }\n\n  render() {\n    const {\n      onSubmit,\n      required\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"userName\",\n      validate: [required],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      validate: [required],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 16\n      }\n    }, \"Log in\"), \"Or \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, \"register now!\"));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'login-form'\n})(LoginForm);","map":{"version":3,"sources":["D:/react-app/inspiring-lab-project/src/modules/login/component/form.js"],"names":["React","Component","Field","reduxForm","Button","InfoCircleOutlined","LoginForm","renderInput","input","label","meta","type","width","renderError","error","touched","color","render","onSubmit","required","props","handleSubmit","form"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAAQC,kBAAR,QAAiC,mBAAjC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAY9BM,WAZ8B,GAYhB,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,KAAD,KAAgC;AAC5C,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADJ,eAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD1B,eAEI,+CAAWD,KAAX;AAAkB,QAAA,IAAI,EAAEG,IAAxB;AAA8B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGK,KAAKC,WAAL,CAAiBH,IAAjB,CAHL,CADJ;AAOD,KApB6B;AAAA;;AAC9BG,EAAAA,WAAW,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAkB;AACzB,QAAGA,OAAO,IAAID,KAAd,EAAoB;AAChB,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2B,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,OAAmDF,KAAnD,CADJ,CADJ;AAMH;AAEJ;;AAUDG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKC,KAApC;AAEA,wBACG;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWC,YAAX,CAAwBH,QAAxB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAkC,MAAA,SAAS,EAAE,KAAKX,WAAlD;AAA+D,MAAA,KAAK,EAAC,UAArE;AAAgF,MAAA,QAAQ,EAAE,CAACY,QAAD,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAwB,MAAA,IAAI,EAAC,UAA7B;AAAwC,MAAA,SAAS,EAAE,KAAKZ,WAAxD;AAAqE,MAAA,KAAK,EAAC,UAA3E;AAAsF,MAAA,QAAQ,EAAE,CAACY,QAAD,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,sBAOD;AAAG,MAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPC,CADH;AAWH;;AAnC6B;;AAsClC,eAAehB,SAAS,CAAC;AACrBmB,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEVhB,SAFU,CAAf","sourcesContent":["// import React, { Component } from 'react';\r\n// import { Field, reduxForm } from 'redux-form'\r\n// import logo1 from './../../../assets/images/logo.png';\r\n// import { Form, Input, Button, Checkbox } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\n// class LoginForm extends Component {\r\n//     render() {\r\n//         const { handleSubmit, initialValue } = this.props\r\n//     return (\r\n//         <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"firstName\">Username</label>\r\n//           <Field \r\n//           name=\"firstName\" \r\n//           component=\"input\" \r\n//           type=\"text\" \r\n//           rules={[\r\n//             {\r\n//               required: true,\r\n//               message: 'Please input your Username!',\r\n//             },\r\n//           ]}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Password</label>\r\n//           <Field name=\"password\" component=\"input\" type=\"text\" />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//       {/* <Form\r\n//       formId=\"login-form\"\r\n//       name=\"login-form\"\r\n//       className=\"login-form1\"\r\n//       initialValues={{\r\n//         remember: true,\r\n//         firstName: ''\r\n//       }}\r\n//       onFinish={handleSubmit}\r\n//     >\r\n//       <Form.Item\r\n//         name=\"firstName\"\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//             message: 'Please input your Username!',\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input prefix={<UserOutlined className=\"site-form-item-icon\" value={initialValue && initialValue.firstName? initialValue.firstName : \"\"}/>} placeholder=\"Username\" />\r\n//       </Form.Item>\r\n//       <Form.Item\r\n//         name=\"password\"\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//             message: 'Please input your Password!',\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input\r\n//           prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//         />\r\n//       </Form.Item>\r\n//       <Form.Item>\r\n//         <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n//           <Checkbox>Remember me</Checkbox>\r\n//         </Form.Item>\r\n\r\n//         <a className=\"login-form-forgot\" href=\"\">\r\n//           Forgot password\r\n//         </a>\r\n//       </Form.Item>\r\n\r\n//       <Form.Item>\r\n//         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n//           Log in\r\n//         </Button>\r\n//         Or <a href=\"\">register now!</a>\r\n//       </Form.Item>\r\n//     </Form> */}\r\n//     </div>\r\n//     )\r\n// }\r\n// }\r\n// LoginForm = reduxForm({\r\n//     // a unique name for the form\r\n//     form: 'login-form'\r\n//   })(LoginForm)\r\n\r\n// export default LoginForm;\r\n\r\n// import React, { Component } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'antd/dist/antd.css';\r\n// import './index.css';\r\n// import { Form, Input, Button, Checkbox } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\n// class loginForm extends Component {\r\n//   constructor(props) {\r\n//       super(props);\r\n      \r\n//   }\r\n//   render(){\r\n//   const onFinish = values => {\r\n//     console.log('Received values of form: ', values);\r\n//   };\r\n\r\n//   return (\r\n//     <Form\r\n//       name=\"normal_login\"\r\n//       className=\"login-form\"\r\n//       initialValues={{\r\n//         remember: true,\r\n//       }}\r\n//       onFinish={onFinish}\r\n//     >\r\n//       <Form.Item\r\n//         name=\"username\"\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//             message: 'Please input your Username!',\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n//       </Form.Item>\r\n//       <Form.Item\r\n//         name=\"password\"\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//             message: 'Please input your Password!',\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input\r\n//           prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//         />\r\n//       </Form.Item>\r\n//       <Form.Item>\r\n//         <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n//           <Checkbox className=\"white-text\">Remember me</Checkbox>\r\n//         </Form.Item>\r\n\r\n//         <a className=\"login-form-forgot\" href=\"\">\r\n//           Forgot password\r\n//         </a>\r\n//       </Form.Item>\r\n\r\n//       <Form.Item>\r\n//         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n//           Log in\r\n//         </Button>\r\n//         Or <a href=\"\">register now!</a>\r\n//       </Form.Item>\r\n//     </Form>\r\n//   );\r\n//       }\r\n// };\r\n// export default loginForm\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Button } from \"antd\";\r\nimport {InfoCircleOutlined} from '@ant-design/icons';\r\n\r\nclass LoginForm extends Component {\r\n    renderError({error, touched}){\r\n        if(touched && error){\r\n            return(\r\n                <div className=\"ui-error-message\">\r\n                    <div style={{color:\"red\"}}><InfoCircleOutlined /> {error}</div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n    renderInput = ({input, label, meta, type}) => {\r\n      return(\r\n          <div className=\"login-form\">\r\n              <label>{label}</label><br/>\r\n              <input {...input} type={type} style={{width:''}}/>\r\n              {this.renderError(meta)}\r\n          </div>\r\n      )\r\n    }\r\n    render(){\r\n        const { onSubmit, required } = this.props;  \r\n        \r\n        return(\r\n           <form className=\"ui form error\" onSubmit={this.props.handleSubmit(onSubmit)}>\r\n               <Field name='username' type=\"text\"component={this.renderInput} label='userName' validate={[required]}/>\r\n               <Field name=\"password\"  type=\"password\" component={this.renderInput} label='Password' validate={[required]}/>\r\n               {/* <button className='ui button primary' style={{marginTop: '20px'}}>Submit</button> */}\r\n               <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n           Log in\r\n         </Button>\r\n       Or <a href=\"\">register now!</a>\r\n           </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'login-form',\r\n  })(LoginForm)"]},"metadata":{},"sourceType":"module"}