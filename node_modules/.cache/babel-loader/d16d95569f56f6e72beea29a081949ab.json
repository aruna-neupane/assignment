{"ast":null,"code":"import { NotificationError } from \"../../../common/component/notificationError\";\nimport axios from 'axios';\n\nconst setUser = payload => ({\n  type: actionType.USER_DATA,\n  payload\n});\n\nconst setList = payload => ({});\n\nconst setTitle = payload => ({\n  type: actionType.SET_PAGE,\n  payload\n});\n\nexport const getUser = () => dispatch => new Promise((resolve, reject) => {\n  dispatch(startLoadingAction());\n  let res = [];\n  let list = [];\n  axios.get('https://panorbit.in/api/users.json').then(response => {\n    list = response.data.users.filter(item => item.id != this.props.match.params.id);\n    res = response.data.users.filter(item => item.id == this.props.match.params.id);\n  }).then(() => {\n    this.setState({\n      data: res[0],\n      list\n    });\n    resolve(data, list);\n  }), error => {\n    dispatch(finishLoadingAction());\n    dispatch(NotificationError());\n    reject(error);\n  };\n});\nexport const getTitle = () => dispatch => new Promise((resolve, reject) => {\n  dispatch(startLoadingAction());\n  let res = [];\n  let list = [];\n  axios.get('https://panorbit.in/api/users.json').then(response => {\n    list = response.data.users.filter(item => item.id != this.props.match.params.id);\n    res = response.data.users.filter(item => item.id == this.props.match.params.id);\n  }).then(() => {\n    this.setState({\n      data: res[0],\n      list\n    });\n  }), error => {\n    dispatch(finishLoadingAction());\n    dispatch(NotificationError());\n    reject(error);\n  };\n});","map":{"version":3,"sources":["D:/react-app/inspiring-lab-project/src/modules/home/store/action.js"],"names":["NotificationError","axios","setUser","payload","type","actionType","USER_DATA","setList","setTitle","SET_PAGE","getUser","dispatch","Promise","resolve","reject","startLoadingAction","res","list","get","then","response","data","users","filter","item","id","props","match","params","setState","error","finishLoadingAction","getTitle"],"mappings":"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","sourcesContent":["import { NotificationError } from \"../../../common/component/notificationError\";\r\nimport axios from 'axios';\r\n\r\nconst setUser = payload => ({\r\n    type: actionType.USER_DATA,\r\n    payload,\r\n  });\r\nconst setList = payload => ({\r\n    \r\n})\r\n\r\nconst setTitle = payload => ({\r\n    type: actionType.SET_PAGE,\r\n    payload,\r\n  });\r\n\r\nexport const getUser = () => dispatch => \r\nnew Promise((resolve, reject) => {\r\n    dispatch(startLoadingAction());\r\n    let res=[];\r\n        let list=[];\r\n        axios.get('https://panorbit.in/api/users.json')\r\n        .then((response) => {  \r\n        list= response.data.users.filter(item => item.id != this.props.match.params.id)  \r\n        res = response.data.users.filter(item => item.id == this.props.match.params.id)\r\n        }).then(()=>{\r\n            this.setState({\r\n                data: res[0],\r\n                list,\r\n            })\r\n            resolve(data, list)\r\n        }),\r\n        (error) => {\r\n            dispatch(finishLoadingAction());\r\n            dispatch(NotificationError());\r\n            reject(error);\r\n        }\r\n    });\r\n\r\nexport const getTitle = () => dispatch => new Promise((resolve, reject) => {\r\n    dispatch(startLoadingAction());\r\n    let res=[];\r\n        let list=[];\r\n        axios.get('https://panorbit.in/api/users.json')\r\n        .then((response) => {  \r\n        list= response.data.users.filter(item => item.id != this.props.match.params.id)  \r\n        res = response.data.users.filter(item => item.id == this.props.match.params.id)\r\n        }).then(()=>{\r\n            this.setState({\r\n                data: res[0],\r\n                list,\r\n            })\r\n        }),\r\n        (error) => {\r\n            dispatch(finishLoadingAction());\r\n            dispatch(NotificationError());\r\n            reject(error);\r\n        }\r\n});"]},"metadata":{},"sourceType":"module"}