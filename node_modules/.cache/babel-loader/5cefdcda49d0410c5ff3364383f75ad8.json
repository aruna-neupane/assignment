{"ast":null,"code":"import { NotificationError } from \"../../../common/component/notificationError\";\nimport * as actionType from './action-type';\nimport axios from 'axios';\n\nconst setUser = payload => ({\n  type: actionType.USER_DATA,\n  payload\n});\n\nconst setList = payload => ({\n  type: actionType.USER_LIST,\n  payload\n});\n\nexport const getTitle = payload => ({\n  type: actionType.SET_PAGE,\n  payload\n});\nexport const getUser = id => dispatch => new Promise((resolve, reject) => {\n  axios.get(\"https://my-json-server.typicode.com/aruna-neupane/database/users\").then(response => {\n    let res;\n    let list = [];\n    list = response.data.filter(item => item.id != id);\n    res = response.data.filter(item => item.id == id);\n    dispatch(setList(list));\n    dispatch(setUser(res));\n    resolve(list, res);\n  }, error => {\n    alert(error);\n    reject();\n  });\n});","map":{"version":3,"sources":["D:/react-app/inspiring-lab-project/src/modules/home/store/action.js"],"names":["NotificationError","actionType","axios","setUser","payload","type","USER_DATA","setList","USER_LIST","getTitle","SET_PAGE","getUser","id","dispatch","Promise","resolve","reject","get","then","response","res","list","data","filter","item","error","alert"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6CAAlC;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,KAAK;AACxBC,EAAAA,IAAI,EAAEJ,UAAU,CAACK,SADO;AAExBF,EAAAA;AAFwB,CAAL,CAAvB;;AAIA,MAAMG,OAAO,GAAGH,OAAO,KAAK;AACxBC,EAAAA,IAAI,EAAEJ,UAAU,CAACO,SADO;AAExBJ,EAAAA;AAFwB,CAAL,CAAvB;;AAKA,OAAO,MAAMK,QAAQ,GAAGL,OAAO,KAAK;AAChCC,EAAAA,IAAI,EAAEJ,UAAU,CAACS,QADe;AAEhCN,EAAAA;AAFgC,CAAL,CAAxB;AAKP,OAAO,MAAMO,OAAO,GAAIC,EAAD,IAAQC,QAAQ,IACvC,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACzBd,EAAAA,KAAK,CAACe,GAAN,CAAU,kEAAV,EAA8EC,IAA9E,CACGC,QAAD,IAAc;AACZ,QAAIC,GAAJ;AACA,QAAIC,IAAI,GAAC,EAAT;AACAA,IAAAA,IAAI,GAAEF,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACZ,EAAL,IAAWA,EAAxC,CAAN;AACAQ,IAAAA,GAAG,GAAGD,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACZ,EAAL,IAAWA,EAAxC,CAAN;AACAC,IAAAA,QAAQ,CAACN,OAAO,CAACc,IAAD,CAAR,CAAR;AACAR,IAAAA,QAAQ,CAACV,OAAO,CAACiB,GAAD,CAAR,CAAR;AACAL,IAAAA,OAAO,CAACM,IAAD,EAAOD,GAAP,CAAP;AACD,GATH,EAUGK,KAAD,IAAW;AACTC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACAT,IAAAA,MAAM;AACP,GAbH;AAeH,CAhBL,CADO","sourcesContent":["import { NotificationError } from \"../../../common/component/notificationError\";\r\nimport * as actionType from './action-type'\r\nimport axios from 'axios';\r\n\r\nconst setUser = payload => ({\r\n    type: actionType.USER_DATA,\r\n    payload,\r\n  });\r\nconst setList = payload => ({\r\n    type: actionType.USER_LIST,\r\n    payload,\r\n})\r\n\r\nexport const getTitle = payload => ({\r\n    type: actionType.SET_PAGE,\r\n    payload,\r\n  });\r\n\r\nexport const getUser = (id) => dispatch => \r\nnew Promise((resolve, reject) => {\r\n        axios.get(\"https://my-json-server.typicode.com/aruna-neupane/database/users\").then(\r\n          (response) => {\r\n            let res;\r\n            let list=[];\r\n            list= response.data.filter(item => item.id != id)  \r\n            res = response.data.filter(item => item.id == id)\r\n            dispatch(setList(list));\r\n            dispatch(setUser(res))\r\n            resolve(list, res);\r\n          },\r\n          (error) => {\r\n            alert(error);\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n\r\n"]},"metadata":{},"sourceType":"module"}