{"ast":null,"code":"import { NotificationError } from \"../../../common/component/notificationError\";\nimport * as actionType from './action-type';\nimport axios from 'axios';\n\nconst setUserLogin = payload => ({\n  type: actionType.LOG_IN,\n  payload\n});\n\nexport const getUserlogin = (uname, pass) => dispatch => new Promise(resolve => {\n  axios.get(\"https://my-json-server.typicode.com/aruna-neupane/database/login?username=\" + uname + \"pass=\" + pass).then(response => {\n    let res;\n    let list = [];\n    res = response.data;\n    dispatch(setUserLogin(res));\n    resolve(res);\n  });\n});","map":{"version":3,"sources":["D:/react-app/inspiring-lab-project/src/modules/login/store/action.js"],"names":["NotificationError","actionType","axios","setUserLogin","payload","type","LOG_IN","getUserlogin","uname","pass","dispatch","Promise","resolve","get","then","response","res","list","data"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6CAAlC;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,OAAO,KAAK;AAC7BC,EAAAA,IAAI,EAAEJ,UAAU,CAACK,MADY;AAE7BF,EAAAA;AAF6B,CAAL,CAA5B;;AAKA,OAAO,MAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiBC,QAAQ,IACrD,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACjBV,EAAAA,KAAK,CAACW,GAAN,CAAU,+EAA6EL,KAA7E,GAAmF,OAAnF,GAA2FC,IAArG,EAA2GK,IAA3G,CACGC,QAAD,IAAc;AACZ,QAAIC,GAAJ;AACA,QAAIC,IAAI,GAAC,EAAT;AACAD,IAAAA,GAAG,GAAGD,QAAQ,CAACG,IAAf;AACAR,IAAAA,QAAQ,CAACP,YAAY,CAACa,GAAD,CAAb,CAAR;AACAJ,IAAAA,OAAO,CAACI,GAAD,CAAP;AACD,GAPH;AASH,CAVL,CADO","sourcesContent":["import { NotificationError } from \"../../../common/component/notificationError\";\r\nimport * as actionType from './action-type'\r\nimport axios from 'axios';\r\n\r\nconst setUserLogin = payload => ({\r\n    type: actionType.LOG_IN,\r\n    payload,\r\n  });\r\n\r\nexport const getUserlogin = (uname, pass) => dispatch => \r\nnew Promise((resolve) => {\r\n        axios.get(\"https://my-json-server.typicode.com/aruna-neupane/database/login?username=\"+uname+\"pass=\"+pass).then(\r\n          (response) => {\r\n            let res;\r\n            let list=[];\r\n            res = response.data\r\n            dispatch(setUserLogin(res))\r\n            resolve(res);\r\n          }\r\n        );\r\n    });\r\n\r\n"]},"metadata":{},"sourceType":"module"}