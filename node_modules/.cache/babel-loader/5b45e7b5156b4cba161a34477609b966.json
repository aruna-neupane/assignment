{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\inspiring-lab-project\\\\src\\\\app\\\\login\\\\login.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Row, Col } from 'antd';\nimport './../../assets/css/style.css';\nimport Logo from './../../modules/login/component/logo';\nimport LoginForm from './../../modules/login/component/form';\nimport logo from './../../assets/images/logo.png';\nimport { getFormValues, submit } from 'redux-form';\nimport { connect } from 'react-redux';\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitForm = values => {\n      console.log('Submitted values are: ', JSON.stringify(this.props.formValue)); // const { pocketRemoteService, cookies } = this.props;\n      // const { locale } = this.state;\n      //   const { username, password } = params;\n      //   const request = {\n      //     clientId: CLIENT_ID,\n      //     clientSecret: CLIENT_SECRET,\n      //     username,\n      //     password,\n      //   };\n      //   const loginInfo = {\n      //     checked: this.state.checked,\n      //     username: this.state.checked === false ? '' : this.state.username,\n      //   };\n      //   localStorage.setItem('login-info', JSON.stringify(loginInfo));\n      //   this.props.ssoAuthenticate(pocketRemoteService, request, cookies, locale);\n    };\n  }\n\n  render() {\n    const validate = values => {\n      const errors = {};\n\n      if (!values.username) {\n        errors.username = 'Required';\n      } else if (values.username.length > 15) {\n        errors.username = 'Must be 15 characters or less';\n      }\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.age) {\n        errors.age = 'Required';\n      } else if (isNaN(Number(values.age))) {\n        errors.age = 'Must be a number';\n      } else if (Number(values.age) < 18) {\n        errors.age = 'Sorry, you must be at least 18 years old';\n      }\n\n      return errors;\n    };\n\n    const warn = values => {\n      const warnings = {};\n\n      if (values.age < 19) {\n        warnings.age = 'Hmm, you seem a bit young...';\n      }\n\n      return warnings;\n    };\n\n    console.log(JSON.stringify(this.props.formValue));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      span: 10,\n      className: \"first-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      span: 10,\n      className: \"second-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LoginForm, {\n      handleSubmit: this.onSubmitForm,\n      inititalValue: this.props.login.initialFormData,\n      validate: validate,\n      warn: this.warn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    login\n  } = state;\n  return {\n    login,\n    formValue: getFormValues('login-form')(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch => ({// navigate,\n  // actionButtonSubmit,\n  // change,\n  // addBranch,\n  // touch,\n  // reset,\n  // destroy,\n}))();\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);","map":{"version":3,"sources":["D:/react-app/inspiring-lab-project/src/app/login/login.js"],"names":["React","Component","Fragment","Row","Col","Logo","LoginForm","logo","getFormValues","submit","connect","login","constructor","props","onSubmitForm","values","console","log","JSON","stringify","formValue","render","validate","errors","username","length","email","test","age","isNaN","Number","warn","warnings","initialFormData","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport './../../assets/css/style.css';\r\nimport Logo from './../../modules/login/component/logo'\r\nimport LoginForm from './../../modules/login/component/form'\r\nimport logo from './../../assets/images/logo.png'\r\nimport { getFormValues, submit } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\n\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    onSubmitForm = (values) => {\r\n        console.log('Submitted values are: ', JSON.stringify(this.props.formValue));\r\n        // const { pocketRemoteService, cookies } = this.props;\r\n        // const { locale } = this.state;\r\n        //   const { username, password } = params;\r\n        //   const request = {\r\n        //     clientId: CLIENT_ID,\r\n        //     clientSecret: CLIENT_SECRET,\r\n        //     username,\r\n        //     password,\r\n        //   };\r\n    \r\n        //   const loginInfo = {\r\n        //     checked: this.state.checked,\r\n        //     username: this.state.checked === false ? '' : this.state.username,\r\n        //   };\r\n    \r\n        //   localStorage.setItem('login-info', JSON.stringify(loginInfo));\r\n    \r\n        //   this.props.ssoAuthenticate(pocketRemoteService, request, cookies, locale);\r\n        };\r\n    render() {\r\n        const validate = values => {\r\n            const errors = {}\r\n            if (!values.username) {\r\n              errors.username = 'Required'\r\n            } else if (values.username.length > 15) {\r\n              errors.username = 'Must be 15 characters or less'\r\n            }\r\n            if (!values.email) {\r\n              errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n              errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.age) {\r\n              errors.age = 'Required'\r\n            } else if (isNaN(Number(values.age))) {\r\n              errors.age = 'Must be a number'\r\n            } else if (Number(values.age) < 18) {\r\n              errors.age = 'Sorry, you must be at least 18 years old'\r\n            }\r\n            return errors\r\n          }\r\n          \r\n          const warn = values => {\r\n            const warnings = {}\r\n            if (values.age < 19) {\r\n              warnings.age = 'Hmm, you seem a bit young...'\r\n            }\r\n            return warnings\r\n          }\r\n         console.log(JSON.stringify(this.props.formValue))\r\n        return (\r\n            <div className=\"login-page\">\r\n                <div className=\"container-row\">\r\n                    <div span={10} className=\"first-div\">\r\n                        <Logo/>\r\n                    </div>\r\n                    <div span={10} className=\"second-div\">\r\n                        <LoginForm\r\n                        handleSubmit={this.onSubmitForm}\r\n                        inititalValue={this.props.login.initialFormData} \r\n                        validate={validate}\r\n                        warn={this.warn}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { login } = state;\r\n    return {\r\n        login,\r\n        formValue: getFormValues('login-form')(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch => ({\r\n    // navigate,\r\n    // actionButtonSubmit,\r\n    // change,\r\n    // addBranch,\r\n    // touch,\r\n    // reset,\r\n    // destroy,\r\n}))();\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(login);"]},"metadata":{},"sourceType":"module"}