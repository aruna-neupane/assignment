{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\inspiring-lab-project\\\\src\\\\modules\\\\login\\\\component\\\\form.js\";\n// import React, { Component } from 'react';\n// import { Field, reduxForm } from 'redux-form'\n// import logo1 from './../../../assets/images/logo.png';\n// import { Form, Input, Button, Checkbox } from 'antd';\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\n// class LoginForm extends Component {\n//     render() {\n//       const renderField = ({\n//         input,\n//         label,\n//         type,\n//         meta: { touched, error, warning }\n//       }) => (\n//         <div>\n//           <label>{label}</label>\n//           <div>\n//             <input {...input} placeholder={label} type={type} />\n//             {touched &&\n//               ((error && <span>{error}</span>) ||\n//                 (warning && <span>{warning}</span>))}\n//           </div>\n//         </div>\n//       )\n//         // const { handleSubmit, initialValue } = this.props\n//         const { handleSubmit, pristine, reset, submitting, validate, warn } = this.props\n//     return (\n//         <div>\n//       {/* <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"firstName\">First Name</label>\n//           <Field name=\"firstName\" component=\"input\" type=\"text\" />\n//         </div>\n//         <div>\n//           <label htmlFor=\"lastName\">Last Name</label>\n//           <Field name=\"lastName\" component=\"input\" type=\"text\" />\n//         </div>\n//         <div>\n//           <label htmlFor=\"email\">Email</label>\n//           <Field name=\"email\" component=\"input\" type=\"email\" />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//        */}\n//     <form onSubmit={handleSubmit}>\n//       <Field\n//         name=\"username\"\n//         type=\"text\"\n//         component={renderField}\n//         label=\"Username\"\n//         validate={validate}\n//       />\n//       <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\" />\n//       <Field name=\"age\" type=\"number\" component={renderField} label=\"Age\" />\n//       <div>\n//         <button type=\"submit\" disabled={submitting}>\n//           Submit\n//         </button>\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n//           Clear Values\n//         </button>\n//       </div>\n//     </form>\n//       {/* <Form\n//       formId=\"login-form\"\n//       name=\"login-form\"\n//       className=\"login-form1\"\n//       initialValues={{\n//         remember: true,\n//         firstName: ''\n//       }}\n//       onFinish={handleSubmit}\n//     >\n//       <Form.Item\n//         name=\"firstName\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your Username!',\n//           },\n//         ]}\n//       >\n//         <Input prefix={<UserOutlined className=\"site-form-item-icon\" value={initialValue && initialValue.firstName? initialValue.firstName : \"\"}/>} placeholder=\"Username\" />\n//       </Form.Item>\n//       <Form.Item\n//         name=\"password\"\n//         rules={[\n//           {\n//             required: true,\n//             message: 'Please input your Password!',\n//           },\n//         ]}\n//       >\n//         <Input\n//           prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//           type=\"password\"\n//           placeholder=\"Password\"\n//         />\n//       </Form.Item>\n//       <Form.Item>\n//         <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n//           <Checkbox>Remember me</Checkbox>\n//         </Form.Item>\n//         <a className=\"login-form-forgot\" href=\"\">\n//           Forgot password\n//         </a>\n//       </Form.Item>\n//       <Form.Item>\n//         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//           Log in\n//         </Button>\n//         Or <a href=\"\">register now!</a>\n//       </Form.Item>\n//     </Form> */}\n//     </div>\n//     )\n// }\n// }\n// LoginForm = reduxForm({\n//     // a unique name for the form\n//     form: 'login-form'\n//   })(LoginForm)\n// export default LoginForm;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })( /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 14\n      }\n    }, \"Remember me\")), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Forgot password\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Log in\"), \"Or \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 14\n      }\n    }, \"register now!\")));\n  }\n\n}\n\nexport default Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);","map":{"version":3,"sources":["D:/react-app/inspiring-lab-project/src/modules/login/component/form.js"],"names":["React","ReactDOM","Form","Input","Button","Checkbox","LockOutlined","UserOutlined","NormalLoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","rules","required","message","color","valuePropName","initialValue","create","name"],"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","sourcesContent":["// import React, { Component } from 'react';\r\n// import { Field, reduxForm } from 'redux-form'\r\n// import logo1 from './../../../assets/images/logo.png';\r\n// import { Form, Input, Button, Checkbox } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\n\r\n// class LoginForm extends Component {\r\n  \r\n//     render() {\r\n      \r\n//       const renderField = ({\r\n//         input,\r\n//         label,\r\n//         type,\r\n//         meta: { touched, error, warning }\r\n//       }) => (\r\n//         <div>\r\n//           <label>{label}</label>\r\n//           <div>\r\n//             <input {...input} placeholder={label} type={type} />\r\n//             {touched &&\r\n//               ((error && <span>{error}</span>) ||\r\n//                 (warning && <span>{warning}</span>))}\r\n//           </div>\r\n//         </div>\r\n//       )\r\n//         // const { handleSubmit, initialValue } = this.props\r\n//         const { handleSubmit, pristine, reset, submitting, validate, warn } = this.props\r\n//     return (\r\n//         <div>\r\n//       {/* <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"firstName\">First Name</label>\r\n//           <Field name=\"firstName\" component=\"input\" type=\"text\" />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"lastName\">Last Name</label>\r\n//           <Field name=\"lastName\" component=\"input\" type=\"text\" />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"email\">Email</label>\r\n//           <Field name=\"email\" component=\"input\" type=\"email\" />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//        */}\r\n      \r\n//     <form onSubmit={handleSubmit}>\r\n//       <Field\r\n//         name=\"username\"\r\n//         type=\"text\"\r\n//         component={renderField}\r\n//         label=\"Username\"\r\n//         validate={validate}\r\n//       />\r\n//       <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\" />\r\n//       <Field name=\"age\" type=\"number\" component={renderField} label=\"Age\" />\r\n//       <div>\r\n//         <button type=\"submit\" disabled={submitting}>\r\n//           Submit\r\n//         </button>\r\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n//           Clear Values\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//       {/* <Form\r\n//       formId=\"login-form\"\r\n//       name=\"login-form\"\r\n//       className=\"login-form1\"\r\n//       initialValues={{\r\n//         remember: true,\r\n//         firstName: ''\r\n//       }}\r\n//       onFinish={handleSubmit}\r\n//     >\r\n//       <Form.Item\r\n//         name=\"firstName\"\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//             message: 'Please input your Username!',\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input prefix={<UserOutlined className=\"site-form-item-icon\" value={initialValue && initialValue.firstName? initialValue.firstName : \"\"}/>} placeholder=\"Username\" />\r\n//       </Form.Item>\r\n//       <Form.Item\r\n//         name=\"password\"\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//             message: 'Please input your Password!',\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input\r\n//           prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//         />\r\n//       </Form.Item>\r\n//       <Form.Item>\r\n//         <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n//           <Checkbox>Remember me</Checkbox>\r\n//         </Form.Item>\r\n\r\n//         <a className=\"login-form-forgot\" href=\"\">\r\n//           Forgot password\r\n//         </a>\r\n//       </Form.Item>\r\n\r\n//       <Form.Item>\r\n//         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n//           Log in\r\n//         </Button>\r\n//         Or <a href=\"\">register now!</a>\r\n//       </Form.Item>\r\n//     </Form> */}\r\n//     </div>\r\n//     )\r\n// }\r\n// }\r\n// LoginForm = reduxForm({\r\n//     // a unique name for the form\r\n//     form: 'login-form'\r\n//   })(LoginForm)\r\n\r\n// export default LoginForm;\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<UserOutlined type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(<Checkbox>Remember me</Checkbox>)}\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          Or <a href=\"\">register now!</a>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: 'normal_login' })(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}